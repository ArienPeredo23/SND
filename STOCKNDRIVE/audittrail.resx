<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>